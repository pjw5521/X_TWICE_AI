# -*- coding: utf-8 -*-
"""Tests1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BpDTMnbW0i7KteBXLkK1F8_Bl4hbWbWi
"""

import torch
print(torch.cuda.is_available()) # cuda 사용 가능?
print(torch.cuda.device_count()) # 갯수
if(torch.cuda.is_available()):
    print(torch.cuda.get_device_name(torch.cuda.current_device()))

# Commented out IPython magic to ensure Python compatibility.
## colab에서의 YOLO 사용을 위한 SetUp

!git clone https://github.com/ultralytics/yolov5
# %cd yolov5
# %pip install -qr requirements.txt

import torch
from IPython.display import Image, clear_output

clear_output()
print(f"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})")

# Commented out IPython magic to ensure Python compatibility.
## 풍경 Image Data 간단한 웹크롤링

# %pip install beautifulsoup4

from bs4 import BeautifulSoup as bs
import urllib.request 
from urllib.parse import quote_plus
import ssl

context = ssl._create_unverified_context()

baseUrl = 'https://search.naver.com/search.naver?where=image&sm=tab_jum&query='
plusUrl = input('검색어 입력:')
crawl_num = int(input('크롤링할 개수 입력 :'))

url = baseUrl + quote_plus(plusUrl)
html = urllib.request.urlopen(url, context = context).read()
soup = bs(html, "html.parser")
img = soup.find_all(class_='_img')

n=1

for i in img:
  print(n)
  pirnt(i['data-source'])
  imgUrl = i['data-source']
  with urlopen(imgUrl) as f:
    with open("C:\\Users\\ddl06\\Desktop\\images" + str(n)+'.jpg','wb') as h:
      img = f.read()
      h.write(img)

  n += 1
  if n > crawl_num:
    break


print("Image Crawling done")



## url -> image data

import cv2
from google.colab.patches import cv2_imshow
import numpy as np
import urllib.request

def url_to_image(url):
  resp = urllib.request.urlopen(url)
  image = np.asarray(bytearray(resp.read()), dtype="uint8")
  image = cv2.imdecode(image, cv2.IMREAD_COLOR)

  return image

import torch

model = torch.hub.load('ultralytics/yolov5', 'yolov5s')

def YOLO_model(img):
  results = model(img)

  results.print()
  results.show()

import torch 
from PIL import Image

#Model
model = torch.hub.load('ultralytics/yolov5', 'yolov5s')

# Image Data
#img = "https://cdn.pixabay.com/photo/2018/07/05/12/24/mountain-3518219__480.jpg"

#img_url = "https://cdn.crowdpic.net/list-thumb/thumb_l_EF71994B65743D894B402DEECE4B6ACD.jpg" 

img_url = "https://pds.joins.com/news/component/htmlphoto_mmdata/201403/28/htm_2014032804056a010a011.jpg"

img = url_to_image(img_url)
cv2_imshow(img)
#img = "https://ultralytics.com/images/zidane.jpg" 

# Inference
results = model(img)

#Results
results.print()
results.show()

results.xyxy[0]  # img1 predictions (tensor)
results.pandas().xyxy[0]  # img1 predictions (pandas)

model_vgg = torch.hub.load('pytorch/vision:v0.10.0', 'vgg19_bn', pretrained=True)

model_vgg.eval()



